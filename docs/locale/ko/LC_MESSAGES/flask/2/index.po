# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Hsiaoming Ltd
# This file is distributed under the same license as the Authlib package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Authlib 0.12.dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-04-09 11:53+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../flask/2/index.rst:4
msgid "Flask OAuth 2.0 Server"
msgstr ""

#: ../../flask/2/index.rst:6
msgid ""
"How to create an OAuth 2.0 server in Flask with Authlib. And understand "
"how OAuth 2.0 works. Authlib has all built-in grant types for you."
msgstr ""

#: ../../flask/2/index.rst:11
msgid ""
"This section is not a step by step guide on how to create an OAuth 2.0 "
"server in Flask. Instead, we will learn how the Flask implementation "
"works, and some technical details in an OAuth 2.0 provider."
msgstr ""

#: ../../flask/2/index.rst:15
msgid ""
"If you need a quick example, here are the official tutorial guide and "
"examples on GitHub:"
msgstr ""

#: ../../flask/2/index.rst:18
msgid ""
"`Example of OAuth 2.0 server <https://github.com/authlib/example-"
"oauth2-server>`_"
msgstr ""

#: ../../flask/2/index.rst:19
msgid "Example of OpenID Connect server (not ready)"
msgstr ""

#: ../../flask/2/index.rst:21
msgid ""
"At the very beginning, we need to have some basic understanding of "
":ref:`the OAuth 2.0 <understand_oauth2>`."
msgstr ""

#: ../../flask/2/index.rst:26
msgid ""
"If you are developing on your localhost, remember to set the environment "
"variable::"
msgstr ""

#: ../../flask/2/index.rst:31
msgid "Looking for OAuth 2 client? Check out :ref:`flask_client`."
msgstr ""

