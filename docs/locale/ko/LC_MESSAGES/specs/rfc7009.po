# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Hsiaoming Ltd
# This file is distributed under the same license as the Authlib package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Authlib 0.12.dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-04-09 11:53+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../specs/rfc7009.rst:4
msgid "RFC7009: OAuth 2.0 Token Revocation"
msgstr ""

#: ../../specs/rfc7009.rst:6
msgid ""
"API references on RFC7009 OAuth 2.0 Token Revocation Authlib "
"implementation."
msgstr ""

#: ../../specs/rfc7009.rst:9
msgid "This section contains the generic implementation of RFC7009_."
msgstr ""

#: ../../specs/rfc7009.rst:18
msgid "Register Revocation Endpoint"
msgstr ""

#: ../../specs/rfc7009.rst:20
msgid ""
"The revocation endpoint can be easily registered to "
":ref:`flask_oauth2_server`. But there are missing methods to be "
"implemented::"
msgstr ""

#: ../../specs/rfc7009.rst:46
msgid "There is also a shortcut method to create revocation endpoint::"
msgstr ""

#: ../../specs/rfc7009.rst:55
msgid "After the registration, you can create a response with::"
msgstr ""

#: ../../specs/rfc7009.rst:63
msgid "API Reference"
msgstr ""

#: authlib.oauth2.rfc7009.RevocationEndpoint:1 of
msgid "Implementation of revocation endpoint which is described in `RFC7009`_."
msgstr ""

#: authlib.oauth2.rfc7009.RevocationEndpoint.ENDPOINT_NAME:1 of
msgid "Endpoint name to be registered"
msgstr ""

#: authlib.oauth2.rfc7009.RevocationEndpoint.validate_endpoint_request:1 of
msgid ""
"The client constructs the request by including the following parameters "
"using the \"application/x-www-form-urlencoded\" format in the HTTP "
"request entity-body:"
msgstr ""

#: authlib.oauth2.rfc7009.RevocationEndpoint.validate_endpoint_request:6 of
msgid "token"
msgstr ""

#: authlib.oauth2.rfc7009.RevocationEndpoint.validate_endpoint_request:6 of
msgid "REQUIRED.  The token that the client wants to get revoked."
msgstr ""

#: authlib.oauth2.rfc7009.RevocationEndpoint.validate_endpoint_request:9 of
msgid "token_type_hint"
msgstr ""

#: authlib.oauth2.rfc7009.RevocationEndpoint.validate_endpoint_request:9 of
msgid "OPTIONAL.  A hint about the type of the token submitted for revocation."
msgstr ""

#: authlib.oauth2.rfc7009.RevocationEndpoint.create_endpoint_response:1 of
msgid ""
"Validate revocation request and create the response for revocation. For "
"example, a client may request the revocation of a refresh token with the "
"following request::"
msgstr ""

#: authlib.oauth2.rfc7009.RevocationEndpoint.create_endpoint_response of
msgid "Returns"
msgstr ""

#: authlib.oauth2.rfc7009.RevocationEndpoint.create_endpoint_response:12 of
msgid "(status_code, body, headers)"
msgstr ""

#: authlib.oauth2.rfc7009.RevocationEndpoint.query_token:1 of
msgid ""
"Get the token from database/storage by the given token string. Developers"
" should implement this method::"
msgstr ""

#: authlib.oauth2.rfc7009.RevocationEndpoint.revoke_token:1 of
msgid ""
"Mark token as revoked. Since token MUST be unique, it would be dangerous "
"to delete it. Consider this situation:"
msgstr ""

#: authlib.oauth2.rfc7009.RevocationEndpoint.revoke_token:4 of
msgid "Jane obtained a token XYZ"
msgstr ""

#: authlib.oauth2.rfc7009.RevocationEndpoint.revoke_token:5 of
msgid "Jane revoked (deleted) token XYZ"
msgstr ""

#: authlib.oauth2.rfc7009.RevocationEndpoint.revoke_token:6 of
msgid "Bob generated a new token XYZ"
msgstr ""

#: authlib.oauth2.rfc7009.RevocationEndpoint.revoke_token:7 of
msgid "Jane can use XYZ to access Bob's resource"
msgstr ""

#: authlib.oauth2.rfc7009.RevocationEndpoint.revoke_token:9 of
msgid "It would be secure to mark a token as revoked::"
msgstr ""

#: authlib.oauth2.rfc7009.RevocationEndpoint.authenticate_endpoint_client:1 of
msgid "Authentication client for endpoint with ``CLIENT_AUTH_METHODS``."
msgstr ""

