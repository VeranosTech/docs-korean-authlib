# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Hsiaoming Ltd
# This file is distributed under the same license as the Authlib package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Authlib 0.12.dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-04-09 11:53+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../specs/rfc7519.rst:4
msgid "RFC7519: JSON Web Token"
msgstr ""

#: ../../specs/rfc7519.rst:6
msgid ""
"API references on RFC7519 JSON Web Token (JWT) Python implementation, "
"guide on JWT encoding and decoding, guide on JWT payload claims "
"validation."
msgstr ""

#: ../../specs/rfc7519.rst:11
msgid ""
"This section contains the generic Python implementation of RFC7519_. Find"
" how to use it in :ref:`JWT Guide <jwt_guide>`."
msgstr ""

#: ../../specs/rfc7519.rst:19
msgid "API Reference"
msgstr ""

#: authlib.jose.rfc7519.JWT.check_sensitive_data:1 of
msgid "Check if payload contains sensitive information."
msgstr ""

#: authlib.jose.rfc7519.JWT.encode:1 of
msgid "Encode a JWT with the given header, payload and key."
msgstr ""

#: authlib.jose.rfc7519.JWT.decode authlib.jose.rfc7519.JWT.encode
#: authlib.jose.rfc7519.JWTClaims of
msgid "Parameters"
msgstr ""

#: authlib.jose.rfc7519.JWT.encode:3 of
msgid "A dict of JWS header"
msgstr ""

#: authlib.jose.rfc7519.JWT.encode:4 of
msgid "A dict to be encoded"
msgstr ""

#: authlib.jose.rfc7519.JWT.encode:5 of
msgid "key used to sign the signature"
msgstr ""

#: authlib.jose.rfc7519.JWT.encode:6 of
msgid "check if sensitive data in payload"
msgstr ""

#: authlib.jose.rfc7519.JWT.decode authlib.jose.rfc7519.JWT.encode of
msgid "Returns"
msgstr ""

#: authlib.jose.rfc7519.JWT.encode:7 of
msgid "JWT"
msgstr ""

#: authlib.jose.rfc7519.JWT.decode:1 of
msgid ""
"Decode the JWS with the given key. This is similar with :meth:`verify`, "
"except that it will raise BadSignatureError when signature doesn't match."
msgstr ""

#: authlib.jose.rfc7519.JWT.decode:5 of
msgid "text of JWT"
msgstr ""

#: authlib.jose.rfc7519.JWT.decode:6 of
msgid "key used to verify the signature"
msgstr ""

#: authlib.jose.rfc7519.JWT.decode:7 of
msgid "class to be used for JWT claims"
msgstr ""

#: authlib.jose.rfc7519.JWT.decode:8 of
msgid "`options` parameters for claims_cls"
msgstr ""

#: authlib.jose.rfc7519.JWT.decode:9 of
msgid "`params` parameters for claims_cls"
msgstr ""

#: authlib.jose.rfc7519.JWT.decode:10 of
msgid "claims_cls instance"
msgstr ""

#: authlib.jose.rfc7519.JWT.decode of
msgid "raise"
msgstr ""

#: authlib.jose.rfc7519.JWT.decode:11 of
msgid "BadSignatureError"
msgstr ""

#: authlib.jose.rfc7519.JWTClaims:1 of
msgid "Payload claims for JWT, which contains a validate interface."
msgstr ""

#: authlib.jose.rfc7519.JWTClaims:3 of
msgid "the payload dict of JWT"
msgstr ""

#: authlib.jose.rfc7519.JWTClaims:4 of
msgid "the header dict of JWT"
msgstr ""

#: authlib.jose.rfc7519.JWTClaims:5 of
msgid "validate options"
msgstr ""

#: authlib.jose.rfc7519.JWTClaims:6 of
msgid "other params"
msgstr ""

#: authlib.jose.rfc7519.JWTClaims:8 of
msgid ""
"An example on ``options`` parameter, the format is inspired by `OpenID "
"Connect Claims`_::"
msgstr ""

#: authlib.jose.rfc7519.JWTClaims.validate:1 of
msgid "Validate everything in claims payload."
msgstr ""

#: authlib.jose.rfc7519.JWTClaims.validate_iss:1 of
msgid ""
"The \"iss\" (issuer) claim identifies the principal that issued the JWT."
"  The processing of this claim is generally application specific. The "
"\"iss\" value is a case-sensitive string containing a StringOrURI value."
"  Use of this claim is OPTIONAL."
msgstr ""

#: authlib.jose.rfc7519.JWTClaims.validate_sub:1 of
msgid ""
"The \"sub\" (subject) claim identifies the principal that is the subject "
"of the JWT.  The claims in a JWT are normally statements about the "
"subject.  The subject value MUST either be scoped to be locally unique in"
" the context of the issuer or be globally unique. The processing of this "
"claim is generally application specific.  The \"sub\" value is a case-"
"sensitive string containing a StringOrURI value.  Use of this claim is "
"OPTIONAL."
msgstr ""

#: authlib.jose.rfc7519.JWTClaims.validate_aud:1 of
msgid ""
"The \"aud\" (audience) claim identifies the recipients that the JWT is "
"intended for.  Each principal intended to process the JWT MUST identify "
"itself with a value in the audience claim.  If the principal processing "
"the claim does not identify itself with a value in the \"aud\" claim when"
" this claim is present, then the JWT MUST be rejected.  In the general "
"case, the \"aud\" value is an array of case- sensitive strings, each "
"containing a StringOrURI value.  In the special case when the JWT has one"
" audience, the \"aud\" value MAY be a single case-sensitive string "
"containing a StringOrURI value.  The interpretation of audience values is"
" generally application specific. Use of this claim is OPTIONAL."
msgstr ""

#: authlib.jose.rfc7519.JWTClaims.validate_exp:1 of
msgid ""
"The \"exp\" (expiration time) claim identifies the expiration time on or "
"after which the JWT MUST NOT be accepted for processing.  The processing "
"of the \"exp\" claim requires that the current date/time MUST be before "
"the expiration date/time listed in the \"exp\" claim. Implementers MAY "
"provide for some small leeway, usually no more than a few minutes, to "
"account for clock skew.  Its value MUST be a number containing a "
"NumericDate value.  Use of this claim is OPTIONAL."
msgstr ""

#: authlib.jose.rfc7519.JWTClaims.validate_nbf:1 of
msgid ""
"The \"nbf\" (not before) claim identifies the time before which the JWT "
"MUST NOT be accepted for processing.  The processing of the \"nbf\" claim"
" requires that the current date/time MUST be after or equal to the not-"
"before date/time listed in the \"nbf\" claim.  Implementers MAY provide "
"for some small leeway, usually no more than a few minutes, to account for"
" clock skew.  Its value MUST be a number containing a NumericDate value."
"  Use of this claim is OPTIONAL."
msgstr ""

#: authlib.jose.rfc7519.JWTClaims.validate_iat:1 of
msgid ""
"The \"iat\" (issued at) claim identifies the time at which the JWT was "
"issued.  This claim can be used to determine the age of the JWT.  Its "
"value MUST be a number containing a NumericDate value.  Use of this claim"
" is OPTIONAL."
msgstr ""

#: authlib.jose.rfc7519.JWTClaims.validate_jti:1 of
msgid ""
"The \"jti\" (JWT ID) claim provides a unique identifier for the JWT. The "
"identifier value MUST be assigned in a manner that ensures that there is "
"a negligible probability that the same value will be accidentally "
"assigned to a different data object; if the application uses multiple "
"issuers, collisions MUST be prevented among values produced by different "
"issuers as well.  The \"jti\" claim can be used to prevent the JWT from "
"being replayed.  The \"jti\" value is a case- sensitive string.  Use of "
"this claim is OPTIONAL."
msgstr ""

